#%{{{ [vim] 
# vim:foldmarker=%{{{,%}}}
# vim:foldmethod=marker
# vim:foldcolumn=5
#%}}}
#
# ΘάTeX-influenced unicodefs
# [thatex]:   https://github.com/tsouanas/thatex
# [unicodef]: https://github.com/tsouanas/unicodef

# text %{{{

# special typography %{{{

spc               ␣  # [sp]a[c]e
nbsp                 # [n]o-[b]reak [sp]ace
nnbsp                # [n]arrow
nbh               ‑  # [n]o-[b]reak [h]yphen
nb-               ‑  #
thin               
hair               
hhyph             ⸗  # oblique (double) [hhyph]en

# %}}}

# misc %{{{

para              ¶
paras             ¶¶
par               ¶
pars              ¶¶
sect              §
sects             §§
sec               §
secs              §§
dag               †
ddag              ‡
bullet            •
fleuron           ❦
hedera            ❦
heder             ❧  # [hede]ra [r]ight
hedel             ☙
fbul              ❧  # [f]loral [bul]let
aldus             ❦  # [aldus] leaf
aleaf             ❦  # [a]ldus [leaf]
copyr             ©  # [copyr]ight
copyl             🄯 # [copyl]eft
phono             ℗  # [phono]gram
reg               ®  # [reg]istered
tm                ™  # [t]rade[m]ark
estim             ℮  # [estim]ated
arabdec           ٫  # [arab]ic [dec]imal separator
arabth            ٬  # [th]ousands separator
arabdate          ؍  # [date] separator
arabsc            ؛  # [s]emi[c]olon
arabc             ،  # [c]omma
arabq             ؟  # [q]uestion mark
arabask           ؟  #
arabstar          ٭  # 
arabdots          ؞  # triple [dots]
hypo              ⸒  # [hypo]diastole
diameter          ⌀
diam              ⌀
degree            °
deg               °
degc              °C # [deg]ree [C]elcius
degf              °F # [deg]ree [F]ahrenheit
gnd               ⏚
ohm               Ω
mho               Ʊ
percont           ⸮  # [percont]ation point
rheto             ⸮  # [rheto]rical question
warn              ⚠
bullseye          ◎
fisheye           ◉

# %}}}

# computer keyboard / icons %{{{

return            ⏎
cmd               ⌘
opt               ⌥
alt               ⎇
esc               ␛
tab               ↹
rtab              ⇥  # [r]ight
ltab              ⇤
tabr              ⇥
tabl              ⇤
vtab              ⭿  # [v]ertical tab
shift             ⇧
caps              ⇪
rerase            ⌦
lerase            ⌫
erase             ⌫  # default: l
del               ␡
vdel              ⌦  # [v]ar del
backs             ⌫
bspace            ⌫
undo              ↶
redo              ↷
replay            ↺

# %}}}

# directions and dimensions %{{{

up                ↑
down              ↓
left              ←
right             →
lbelow            ⬐  # [l]eft [below]
rbelow            ⬎
lbel              ⬐
rbel              ⬎
labove            ⬑
rabove            ⬏
labo              ⬑
rabo              ⬏
archfrom          ⇤  # [arch]itect's
archto            ⇥
varchfrom         ⤒  # [v]ertical
varchto           ⤓
measurefrom       ⇤
measureto         ⇥
measfrom          ⇤
measto            ⇥
vmeasurefrom      ⤒  # [v]ertically
vmeasureto        ⤓
vmeasfrom         ⤒
vmeasto           ⤓

# %}}}

# money %{{{

eur               €
gbp               £
usd               $
yen               ¥
brl               R$
crz               ₢$
cent              ¢
cur               ¤

# %}}}

# ye olde %{{{

Eth               Ð
eth               ð
Thorn             Þ
thorn             þ
prescr            ℞
sho               Ϸ  # Bactrian Ϸ "sho"
tsan              ͷ  # Arcadian "tsan"
digamma           Ϝ
Pdigamma          Ͷ  # [P]amphylian digamma
pdigamma          ͷ
San               Ϻ  # San
san               ϻ

# %}}}

# %}}}

# math (sem-named) %{{{

## ancient greek numerals %{{{

sampi             ϡ  # 900
Koppa             Ϟ  # 90
koppa             ϟ

# %}}}

# general math %{{{

pm                ±
mp                ∓
infty             ∞
pinfty            +∞  # [p]lus
minfty            -∞  # [m]inus
pminfty           ±∞
mpinfty           ∓∞
surd              √
root              √
sqrt              √
cbrt              ∛
3rt               ∛
4rt               ∜
longdiv           ⟌
percen            %
permil            ‰
permyr            ‱
propto            ∝  # [prop]ortional [to]
ntimes            ·  # [n]umeric [times]
plus              +
cross             ×
times             ×
frac              ÷
monus             ∸
fractimes         ⋇
divtimes          ⋇
divby             ∕  # {use inline}
fracby            ⁄  # {use with sup/subscripts}
exp               ˆ  # [exp]onentiation
pow               ˆ  # to the [pow]er of
inv               ⁻¹ # [inv]erse
Prod              ∏
Sum               ∑
Times             ⨉
divides           ∣
divs              ∣
div               ∣
ndivides          ∤
ndivs             ∤
ndiv              ∤
coprime           ⟂
eq                =
neq               ≠
nneq              ⧣  # [n]ot[n]ot
ssapart           ⧣  # [s]lash-[s]lash [apart]ness
shapart           ♯  # [sh]arp [apart]ness
apart             ♯  # default: [sh]
vapart            ⧣  # [v]ar: [ss]
leq               ≤
geq               ≥
nlt               ≮
ngt               ≯
nleq              ≰
ngeq              ≱
inteq             ≡  # [int]ensional
ieq               ≡
intneq            ≢
ineq              ≢
ninteq            ≢
nieq              ≢
nninteq           ⧥  # [n]ot[n]ot
intnneq           ⧥
nnieq             ⧥
inneq             ⧥
sameq             ≣
defeq             ≝
askeq             ≟
asklt             ⩻
askgt             ⩼
asseq             ≔
eqass             ≕
defiff            ⇐≝⇒
askiff            ⇐?⇒
intiff            ⇚⇛  # [int]ensionally equivalent
iiff              ⇚⇛
askintiff         ⇚?⇛
askiiff           ⇚?⇛
therefore         ∴
there             ∴
hence             ∴
because           ∵
cause             ∵
lem               ⛤  # [l]aw of [e]xcluded [m]iddle
raa               ⛤  # [r]eductio [a]d [a]bsurdum
halmos            ∎
qed               ∎

# %}}}

## punctuation for common math %{{{

lceil             ⌈  # [ceil]ing
rceil             ⌉
lcei              ⌈
rcei              ⌉
lfloor            ⌊
rfloor            ⌋
lflo              ⌊
rflo              ⌋

# %}}}

## implications %{{{

iff               ⇔
implies           ⇒
implied           ⇐
imps              ⇒  # [imp]lie[s]
impd              ⇐  # [imp]lie[d by]
impliesr          ⇒  # [r]ight
impliesl          ⇐
impliesb          ⇔  # [b]idirectional/oth
impliesnw         ⇖  # [n]orth[w]est
impliesne         ⇗
impliessw         ⇙
impliesse         ⇘
impsr             ⇒  # [imp]lie[s] [r]ight
impsl             ⇐
impsb             ⇔
impsd             ⇓
impsu             ⇑
impsnw            ⇖
impsne            ⇗
impssw            ⇙
impsse            ⇘
niff              ⇎
nimplied          ⇍
nimplies          ⇏
nimps             ⇏
nimpd             ⇍
nimpliesr         ⇏
nimpliesl         ⇍
nimpliesb         ⇎
nimpsr            ⇏
nimpsl            ⇍
nimpsb            ⇎
viff              ⇕  # [v]ertical
vimplies          ⇓
vimplied          ⇑
vimps             ⇓
vimpd             ⇑
Iff               ⟺  # (long)
Implies           ⟹
Implied           ⟸
Imps              ⟹
Impd              ⟸
Impsr             ⟹
Impsl             ⟸
Impsb             ⟺
intimplies        ⇛
intimplied        ⇚
intimps           ⇛
intimpd           ⇚
vintimplies       ⤋
vintimplied       ⤊
vintimps          ⤋
vintimpd          ⤊
sameimps          ⭆
sameimpd          ⭅

# %}}}

# sets %{{{

emptyset          Ø
empty             Ø
sempty            ∅  # [s]lash
bempty            ⦰  # [b]ackslash
coempty           ⦰
algs              𝔸  # algebraics
bools             𝔹
nats              ℕ
ints              ℤ
rats              ℚ
reals             ℝ
comps             ℂ
complex           ℂ
quarts            ℍ
qi                𝐢
qj                𝐣
qk                𝐤
Im                ℑ
Re                ℜ
bloch             ℬ
field             𝕜
in                ∈
notin             ∉
nin               ∉
ni                ∋  # (in backwards)
notni             ∌
nni               ∌
vin               ⫙  # [v]ertical
vni               ⟒
Inter             ⋂
Union             ⋃
inter             ∩
union             ∪
disjunion         ⊎
Disjunion         ⨄
dunion            ⊎  # [d]isjoint union
Dunion            ⨄  # [D]isjoint union
symdiff           ∆  # [sym]metric [diff]erence
symd              ∆
setminus          ∖
sminus            ∖  # [s]et [minus]
setdiff           ∖  # [set] [diff]erence
sdiff             ∖
containd          ⊆  # [contain]e[d] in
contains          ⊇
subset            ⊆
supset            ⊇
subs              ⊆
sups              ⊇
nsubset           ⊈
nsupset           ⊉
nsubs             ⊈
nsups             ⊉
hsubset           ⊂  # [h]orseshoe
hsupset           ⊃
hsubs             ⊂
hsups             ⊃
nhsubset          ⊄
nhsupset          ⊅
nhsubs            ⊄
nhsups            ⊅
psubset           ⊊  # [p]roper
psupset           ⊋
psubs             ⊊
psups             ⊋
subsetneq         ⊊
supsetneq         ⊋
subsneq           ⊊
supsneq           ⊋
isubset           ⫃  # [i]nhabited
isupset           ⫄
isubs             ⫃  # XXX: should look like: ̱⪽ or ̲⪽
isups             ⫄  # XXX: should look like: ̱⪾ or ̲⪾
ihsubset          ⪽  # [h]orse
ihsupset          ⪾
ihsubs            ⪽
ihsups            ⪾
powerset          ℘
power             ℘
pset              ℘
pfinset           ℘ᶠ  # XXX: should be _f
pfset             ℘ᶠ  # XXX: should be _f
idisjoint         ꖻ   # [i]nhabited [disjoint]
pedisjoint        )(  # [p]ossibly [e]mpty [disjoint]
disjoint          ꖻ   # default: i
djoint            ꖻ
conjoint          ≬
cjoint            ≬
overlap           ≬
olap              ≬
meets             ≬
isects            ≬  # [i]nter[sects] (with)
compl             ᶜ  # [compl]ement
Compl             ∁  # (large)
mpl               ᵓ  # cocomplement
ingen             ⥺  # [in] [gen]erator
nigen             ⭄  # [ni] [gen]erator
genfrom           ⥺  # [gen]erated [from]
fromgen           ⥺  # [from] [gen]erator

# %}}}

## punctuation for sets %{{{

lset              {
rset              }
eset              {} # [e]mpty
ltup              ⟨  # [tup]le
rtup              ⟩
etup              ⟨⟩
lfam              ⟨  # [fam]ily
rfam              ⟩
efam              ⟨⟩
lbag              ⟅
rbag              ⟆
ebag              ⟅⟆
lmset             ⟅  # [m]ulti[set]
rmset             ⟆
emset             ⟅⟆
lmul              ⟅  # [mul]tiset
rmul              ⟆
emul              ⟅⟆

# %}}}

## additional (no long forms) %{{{

dotin             ⋵
din               ⋵
dothsubs          ⪽
dothsups          ⪾
dhsubs            ⪽  # [d]ot
dhsups            ⪾
chsubs            ⟃  # [c]irc hsubs
chsups            ⟄
ohsubs            ⟃  # [o]h/pen
ohsups            ⟄
clsubs            ⫑  # [cl]osed
clsups            ⫒
clhsubs           ⫏  # [h]orse
clhsups           ⫐
mid               |
Mid               ⫿
bbsubs            ⋐  # [b]lackboard [b]old
bbsups            ⋑
bbinter           ⋒
bbunion           ⋓
bbin              ⋹
ssubs             ⋐  # (no bb-)
ssups             ⋑
iinter            ⋒
uunion            ⋓
iin               ⋹  # ALSO: [i]ntensionally [in]

# %}}}

# geometry %{{{

angle             ∠
mangle            ∡  # [m]easured
sangle            ∢  # [s]pherical
righta            ∟  # [a]ngle
tria              △  # [tria]ngle
perp              ⟂  # [perp]endicular
ortho             ⟂  # [ortho]gonal
paral             ∥  # [paral]lel
nparal            ∦
eqparal           ⋕
paraleq           ⋕
slparal           ⫽  # [sl]anted
slparaleq         ⧣

# %}}}

# analysis %{{{

int               ∫
iint              ∬
iiint             ∭
iiiint            ⨌
2int              ∬
3int              ∭
4int              ⨌
oint              ∮
cwint             ∱  # [c]lock[w]ise
ccwint            ⨑  # [c]ounter[c]lock[w]ise
cwoint            ∲
ccwoint           ∳
oiint             ∯
oiiint            ∰
o2int             ∯
o3int             ∰
uint              ⨛  # [u]pper
lint              ⨜  # [l]ower
partial           ∂
parder            ∂  # [par]tial [der]ivative
pderiv            ∂  # [p]artial [deriv]ative
pder              ∂
nabla             ∇
tends             →  # [tends] to
ntends            ↛
limof             ←
nlimof            ↚
convol            ∗  # [convol]ution
crocor            ⋆  # [cro]ss-[cor]relation

# %}}}

# set theory %{{{

aleph             ℵ
beth              ℶ
gimel             ℷ
daleth            ℸ
continuum         𝔠
eqc               =꜀  # in [c]ardinality
leqc              ≤꜀
ltc               <꜀
geqc              ≥꜀
gtc               >꜀
eqo               =ₒ  # [o]rder type
leqo              ≤ₒ
lto               <ₒ
geqo              ≥ₒ
gto               >ₒ
forces            ⊩
nforces           ⊮
incinfty          ⧜  # [inc]omplete
ninfty            ⧞  # [n]egated
baldinfty         ⧝
latinfty          ꝏ  # [lat]in-abusing
Latinfty          Ꝏ  # (big)

# %}}}

## punctuation for set theory %{{{

leclass           ⦃  # [e]quivalence [class]
reclass           ⦄
lecla             ⦃
recla             ⦄
lecls             ⦃
recls             ⦄
lcclass           [  # [c]ongruence [class]
rcclass           ]
lccla             [
rccla             ]
lccls             [
rccls             ]
lclass            ⦃  # set-theoretic [class]
rclass            ⦄
eclass            ⦃⦄
lcla              ⦃
rcla              ⦄
ecla              ⦃⦄
lcls              ⦃
rcls              ⦄
ecls              ⦃⦄

# %}}}

# functions %{{{

lam               λ  # [lam]bda
mal               ʎ  # (lam backwards)
hole              ·
phole             ·  # [p]oint
dhole             –  # [d]ash
uhole             _  # [u]nderscore
comp              ∘  # [comp]osition
of                ∘
after             ∘
dcomp             ⨾  # [d]iagramatic [comp]osition
fby               ⨾  # [f]ollowed [by]
then              ⨾
to                →
from              ←
tofrom            ⇄
fromto            ⇆
2to               ⇉
2from             ⇇
3to               ⇶
3from             ⬱
vto               ↓  # [v]ertical
vfrom             ↑
vtofrom           ⇵
vfromto           ⇅
2vfrom            ⇈
2vto              ⇊
To                ⟶
From              ⟵
nto               ↛
nfrom             ↚
nvto              ⤈  # XXX: abuse: strike for not
nvfrom            ⤉  # XXX: abuse: strike for not
sto               ⇸  # [s]trike
sfrom             ⇸
svto              ⤈
svfrom            ⤉
oparto            ⇴  # [par]tial notation with [o]
oparfrom          ⬰
oparbi            ⥈
parto             ⇀  # [par]tial
parfrom           ↼
partofrom         ⇌
parfromto         ⇋
divers            ↑  # partial function [diver]ge[s]
pardivs           ↑
xto               ⥇
xfrom             ⬾
mapsto            ↦
mapsfrom          ↤
mapsr             ↦
mapsl             ↤
mapsu             ↥
mapsd             ↧
vmapsto           ↧
vmapsfrom         ↥
Mapsto            ⟼  # (long)
Mapsfrom          ⟻
Mapsr             ⟼
Mapsl             ⟻
imapsto           ⤇  # [i]mplies-like
imapsfrom         ⤆
imapsr            ⤇
imapsl            ⤆
Imapsr            ⟾
Imapsl            ⟽
rest              ↾  # [rest]riction
corest            ⇂  # [corest]riction
rwimg             “  # [r]ussell & [w]hitehead [im]a[g]e
rwof              ‘  # [rw] (the) _ [of] _
pimg              ℘⃗  # covariant pset function-image
ppre              ℘⃖  # contravariant pset function-preimage
astimg            ⁎  # covariant [ast]erisk [im]a[g]e
astpre             ⃰  # contravariant [ast]erisk [pre]image
surjto            ↠  # [surj]ection
surjfrom          ↞
injto             ↣  # [inj]ection
injfrom           ↢
bijto             ⤖  # [bij]ection
bijfrom           ⬻
embto             ↪  # [emb]edding
embfrom           ↩
embnw             ⤣
embne             ⤤
embse             ⤥
embsw             ⤦
surto             ↠  # [sur]jection
surfrom           ↞
into              ↣  # [in]jection
infrom            ↢
bito              ⤖  # [bi]jection
bifrom            ⬻
emto              ↪  # [em]bedding
emfrom            ↩
ninjto            ⤔  # [n]ot (via strike)
ninjfrom          ⬹
nsurjto           ⤀
nsurjfrom         ⬴
nbijto            ⤗  # XXX: abuse: strike for not
nbijfrom          ⬼  # XXX: abuse: strike for not
ninto             ⤔  # XXX: abuse: strike for not
ninfrom           ⬹  # XXX: abuse: strike for not
nsurto            ⤀  # XXX: abuse: strike for not
nsurfrom          ⬴  # XXX: abuse: strike for not
nbito             ⤗  # XXX: abuse: strike for not
nbifrom           ⬼  # XXX: abuse: strike for not
sbijto            ⤗  # XXX: abuse: strike for not
sbijfrom          ⬼  # XXX: abuse: strike for not
sinto             ⤔  # XXX: abuse: strike for not
sinfrom           ⬹  # XXX: abuse: strike for not
ssurto            ⤀  # XXX: abuse: strike for not
ssurfrom          ⬴  # XXX: abuse: strike for not
sbito             ⤗  # XXX: abuse: strike for not
sbifrom           ⬼  # XXX: abuse: strike for not

# %}}}

## additional %{{{

Tofrom            ⥂
Fromto            ⥃
toFrom            ⥄
eqto              ⥱
isoto             ⥲
simto             ⥲
simfrom           ⭉
misto             ⭇
misfrom           ⭋
tosim             ⥴
tomis             ⭌
toapprox          ⥵
fromapprox        ⭊
tommis            ⭈
toplus            ⥅
fromplus          ⥆
ndetto            ⇝  # [n]on-[det]erministic
ndetfrom          ⇜
dto               ⇢  # [d]ashed
dfrom             ⇠
dotto             ⤑
dotfrom           ⬸
leadsto           ↝
leadsfrom         ↜
ledfrom           ↜
leadsr            ↝
leadsl            ↜
yields            ↝
becomes           ↝
smilesto          ⤻
frownsfrom        ⤺
smileto           ⤻
frownfrom         ⤺
squigto           ⇝
squigfrom         ⇜
squigbi           ↭
Squigfrom         ⬳ 
Squigto           ⟿
zigto             ⇝
zigfrom           ⇜
zigbi             ↭
wavesto           ⤳
wavesfrom         ⬿
waveto            ⤳
wavefrom          ⬿
loopsfrom         ↫
loopsto           ↬
loopfrom          ↫
loopto            ↬
tobar             ⇥
barfrom           ⇤
sparksto          ⟢
sparksfrom        ⟣
sparkto           ⟢
sparkfrom         ⟣
fishto            ⤔
fishfrom          ⬹
Fishto            ⤕
Fishfrom          ⬺
substo            ⥹
supsfrom          ⥻

# %}}}

# relations %{{{

rcomp             ⋄  # [r]elational composition
relto             ⇾  # [rel]ation
relfrom           ⇽
relbi             ⇿
equiv             ≃  # [equiv]alent
nequiv            ≄
iso               ≅  # [iso]morphic
niso              ≇
osi               ≌  # (iso backwards)
dotiso            ⩭
diso              ⩭
sim               ∼  # [sim]ilar
nsim              ≁
ssim              ≈
nssim             ≉
sssim             ≋
simeq             ≃
nsimeq            ≄
simneq            ≆
mis               ∽  # (sim backwards)
miseq             ⋍
Sim               ∾
approx            ≈  # [approx]imates
napprox           ≉
appr              ≈
nappr             ≉
approxeq          ≊
happrox           ⩯  # [h]at
happr             ⩯
assymp            ≍
nassymp           ≭
samerog           ≍
diffrog           ≭  # [r]ate [o]f [g]rowth
rog               ≍
nrog              ≭
rogeq             ≍  # [rate] [eq]
nrogeq            ≭
rogneq            ≭

# %}}}

# type theory / programming languages %{{{

cons              ∷
concat            ⧺
bnfeq             ⩴
grameq            ⩴
dijsep            ⫿  # [dij]kstra guarded cmd [sep]arator
dijcase           ⫿
guard             ⫿  # dijkstra [guard]ed cmd separator
jeq               ≐  # [j]udgementally
deq               ≡  # [d]efinitionally
intjeq            ⩧
ijeq              ⩧
jieq              ⩧
defjeq            :≐
defdeq            :≡
assjeq            :≐ # [ass]igned
assdeq            :≡
jeqass            ≐:
deqass            ≡:
matches           ≡: # pattern [matches]
matcheq           ≕  # (with = instead of ≡)
unit              ⥠
counit            ⥡
j                 ·  # (co)pro[j]ect
outl              ·l
outr              ·r
inl               l·
inr               r·
lcar              𝚌𝚊𝚛  # [l]isp
lcdr              𝚌𝚍𝚛
Lcar              ᴄᴀʀ  # [L]ISP
Lcdr              ᴄᴅʀ

# %}}}

## punctuation for logic / languages %{{{

lquasi            ⌜  # [quasi]quote
rquasi            ⌝
lqua              ⌜
rqua              ⌝
lqq               ⌜  # [q]uasi[q]uote
rqq               ⌝
lsem              ⟦  # [sem]antics
rsem              ⟧

# %}}}

## lean %{{{

eqs               ▸
gets              ←

# %}}}

## names of types / elements %{{{

=0                𝟘
=1                𝟙
=2                𝟚
Empty             𝟘
Unit              𝟙
Two               𝟚
false             𝚏𝚊𝚕𝚜𝚎
true              𝚝𝚛𝚞𝚎
tt                𝘵𝘵
ff                𝘧𝘧

# %}}}

# algebra / topology %{{{

cong              ≡
ncong             ≢
subgroup          ≤
nsubgroup         ≰
subgrp            ≤
nsubgrp           ≰
normal            ⊴
nnormal           ⋬
lamron            ⊵  # (normal backwards)
nlamron           ⋭
normsub           ⊴
nnormsub          ⋬
normsup           ⊵
nnormsup          ⋭
snormal           ⊲  # [s]imply/trict
slamron           ⊳
nsnormal          ⋪  # [n]ot [s]imply/trict
nslamron          ⋫
tensor            ⊗
dirsum            ⊕  # [dir]ected [sum]
smash             ⨳
timesl            ⋉
timesr            ⋊
timesd            ⨲
sdprodl           ⋉  # [s]emi[d]irect [prod]uct [l]eft
sdprodr           ⋊
sdprodd           ⨲
semidirl          ⋉  # [semidir]ect product [l]eft
semidirr          ⋊
semidird          ⨲
ltimes            ⋉  # TeX compat
rtimes            ⋊
lthree            ⋋
rthree            ⋌
transverse        ⫛
tverse            ⫛
wreath            ≀
wr                ≀
shuffle           ⧢
shuf              ⧢
transpose         ᵀ
tpose             ᵀ
ewprod            ⊙  # [e]lement/ntry-[w]ise [prod]uct
schurprod         ⊙  # [Schur] [prod]uct
hadaprod          ⊙  # [Hada]mard [prod]uct
hadadiv           ⊘  # [Hada]mard [div]ision
kronsum           ⊕  # [Kron]ecker [sum]
kronprod          ⊗  # [Kron]ecker [prod]uct
krprod            ∗  # [K]hatri–[R]ao [prod]uct
fsprod            ∙  # [f]ace-[s]plitting [prod]uct

# %}}}

## punctuation for algebra %{{{

lgen              ⟨  # [gen]erated
rgen              ⟩
egen              ⟨⟩ # [e]mpty
lspan             ⟨
rspan             ⟩
espan             ⟨⟩
lnorm             ‖
rnorm             ‖
norm              ‖
nnorm             ⦀
lnnorm            ⦀
rnnorm            ⦀

# %}}}

# cats %{{{

coprod            ⨿
Coprod            ∐
op                ᵒᵖ # [op]posite
psetr             ℘⃗  # covariant pset functor
psetl             ℘⃖  # contravariant pset functor
endo              ↺  # [endo]morphism
adj               ⊣  # [adj]unction
ladjto            ⊣  # [l]eft [adj]oint [to]
adjto             ⊣  # [l]eft [adj]oint [to]
deloop            𝗕
shriek            !
shrieku           ꜝ
shriekd           ﹗
inf0              (∞,0)-
inf1              (∞,1)-
inf2              (∞,2)-
infn              (∞,n)-

# %}}}

## names of cats %{{{

-0                𝟎
-1                𝟏
-2                𝟐
CAT               𝐂𝐚𝐭
SET               𝐒𝐞𝐭
PSET              𝐏𝐒𝐞𝐭
PTDSET            𝐏𝐭𝐝𝐒𝐞𝐭
FINSET            𝐅𝐢𝐧𝐒𝐞𝐭
FINORD            𝐅𝐢𝐧𝐎𝐫𝐝
ORD               𝐎𝐫𝐝
PROSET            𝐏𝐫𝐨𝐬𝐞𝐭
POSET             𝐏𝐨𝐬𝐞𝐭
SEMIGROUP         𝐒𝐞𝐦𝐢𝐠𝐫𝐨𝐮𝐩
SGROUP            𝐒𝐞𝐦𝐢𝐠𝐫𝐨𝐮𝐩
SEMIGRP           𝐒𝐞𝐦𝐢𝐠𝐫𝐨𝐮𝐩
SGRP              𝐒𝐞𝐦𝐢𝐠𝐫𝐩
MONOID            𝐌𝐨𝐧𝐨𝐢𝐝
MON               𝐌𝐨𝐧
GROUP             𝐆𝐫𝐨𝐮𝐩
GRP               𝐆𝐫𝐩
ABEL              𝐀𝐛𝐞𝐥
RING              𝐑𝐢𝐧𝐠
RNG               𝐑𝐧𝐠
RIG               𝐑𝐢𝐠
MOD               𝐌𝐨𝐝
VECT              𝐕𝐞𝐜𝐭
FINVECT           𝐅𝐢𝐧𝐕𝐞𝐜𝐭
MATRIX            𝐌𝐚𝐭𝐫𝐢𝐱
MAT               𝐌𝐚𝐭𝐫𝐢𝐱
LATTICE           𝐋𝐚𝐭𝐭𝐢𝐜𝐞
LAT               𝐋𝐚𝐭𝐭𝐢𝐜𝐞
HEYTING           𝐇𝐞𝐲𝐭𝐢𝐧𝐠
HALG              𝐇𝐞𝐲𝐭𝐢𝐧𝐠
BOOLEAN           𝐁𝐨𝐨𝐥𝐞𝐚𝐧
BALG              𝐁𝐨𝐨𝐥𝐞𝐚𝐧
HA                𝐇𝐀
BA                𝐁𝐀
MODEL             𝐌𝐨𝐝𝐞𝐥

# %}}}

# logic %{{{

truth             ⊤
verum             ⊤
falsity           ⊥
falsum            ⊥
contra            ⊥
absurdum          ⊥
absurd            ⊥
not               ¬
and               ∧
or                ∨
And               ⋀
Or                ⋁
conj              ∧  # [conj]unction
disj              ∨  # [disj]unction
Conj              ⋀
Disj              ⋁
nand              ⩚
nor               ⩛
forall            ∀
exists            ∃
nexists           ∄
unique            ∃!
fa                ∀  # [f]or[a]ll
ex                ∃  # [ex]ists
un                ∃! # [un]ique
nex               ∄
russell           ℩  # [russell] descriptor
rdesc             ℩  # [r]ussell [desc]riptor
theonly           ℩
himplies          ⊃  # [h]orseshoe
himplied          ⊂
himps             ⊃
himpd             ⊂
hiff              ⫗
Himplies          ⥰  # [H]orseshoe
Himps             ⥰
assert            ⊢
sequent           ⊢
proves            ⊢
nproves           ⊬
proved            ⊣
provs             ⊢  # [prov]e[s]
provd             ⊣  # [prov]e[d by]
nprovs            ⊬
provesd           ⊢⊣
proveds           ⟛
provsd            ⊢⊣
provds            ⟛
biproves          ⟛
biprovs           ⟛
Proves            ⟝
Proved            ⟞
Provs             ⟝
Provd             ⟞
models            ⊨
nmodels           ⊭
modeled           ⫤
modeld            ⫤
mods              ⊨  # [mod]el[s]
modd              ⫤  # [mod]ele[d]
nmods             ⊭
modelsd           ⧦
modeleds          ⟚
modelds           ⟚
bimodels          ⊨
bimods            ⊨

# %}}}

## additional %{{{

ton               ⌐  # (not backwards)
andor             ⩙
orand             ⩙
dotand            ⩑
dotor             ⩒
dand              ⩑
dor               ⩒
anddot            ⟑
ordot             ⟇
dvand             ⩕  # [d]ouble [v]ision
dvor              ⩖
dvAnd             ⨇
dvOr              ⨈
dvconj            ⩕
dvdisj            ⩖
dvConj            ⨇
dvDisj            ⨈
bbnot             ⫬  # [b]lackboard [b]old
bbton             ⫭
bbor              ⩔
bband             ⩓
bbdisj            ⩔
bbconj            ⩓
nnot              ⫬  # (no bb-)
tton              ⫭
oor               ⩔
aand              ⩓

# %}}}

# linear logic %{{{

linto             ⊸
linfrom           ⟜
linwith           &
linpar            ⅋
linnot            ᗮ  # XXX: should be ^⊥
linneg            ᗮ  # XXX: should be ^⊥
lintimes          ⊗
linplus           ⊕
ofcourse          !
ofc               !
whynot            ?
adisj             ⊕  # [a]dditive [disj]unction
aconj             &  # [a]dditive [conj]unction
mdisj             ⅋  # [m]ultiplicative [disj]unction
mconj             ⊗  # [m]ultiplicative [conj]unction

# %}}}

# modal logic %{{{

nece              □  # [nece]ssary
poss              ◊  # [poss]ible
vnece             ◻  # [v]ar
vposs             ◇  # [v]ar

# %}}}

# order %{{{

dual              ∂
top               ⊤
bottom            ⊥
bot               ⊥
Top               ⟙
Bottom            ⟘
Bot               ⟘
ttop              ⫪
bbottom           ⫫
bbot              ⫫
lift              ˔
meet              ∧
join              ∨
Meet              ⋀
Join              ⋁
glb               ∧
lub               ∨
Glb               ⋀
Lub               ⋁
covers            ⤚
covs              ⤚  # [cov]er[s]
coverd            ⤙  # [cover]e[d] by
covd              ⤙  # [cov]ere[d] by
covby             ⤙  # [cov]ered [by]
compar            ≶  # [compar]able
compareq          ⋚
ncompar           ≸
incompar          ≸  # [incompar]able
incompardp        ‖  # [d]avey [p]riestley
gtlt              ≷
glt               ≷
ltgt              ≶
lgt               ≶
ngtlt             ≹
nglt              ≹
nltgt             ≸
nlgt              ≸
leqgeq            ⋚
lgeq              ⋚
geqleq            ⋛
gleq              ⋛
wbelow            ≪  # [w]ay below
wabove            ≫
wbel              ≪
wabo              ≫
wayb              ≪
waya              ≫
wb                ≪
wa                ≫

# %}}}

## additional %{{{

meeteq            ≙
joineq            ≚
lts               ≲  # [s]im(ilar)
gts               ≳
nlts              ≴
ngts              ≵
cmeet             ⋏  # [c]urly/vy
cjoin             ⋎
clt               ≺
cgt               ≻
nclt              ⊀
ncgt              ⊁
cleq              ≼
cgeq              ≽
ncleq             ⋠
ncgeq             ⋡
clts              ≾  # [s]im
cgts              ≿
blowlt            ⊰
blowgt            ⊱
succ              ≻  # [succ]eeds
prec              ≺  # [prec]edes
succeq            ≽
preceq            ≼
wwbelow           ⋘  # [w]ay-[w]ay below
wwabove           ⋙
wwbel             ⋘
wwabo             ⋙
wwayb             ⋘
wwaya             ⋙
wwb               ⋘
wwa               ⋙
cwbelow           ⪻  # [c]urly/vy
cwabove           ⪼
cwbel             ⪻
cwabo             ⪼
cwayb             ⪻
cwaya             ⪼
cwb               ⪻
cwa               ⪼
dotleq            ⪁
dotgeq            ⪂
dleq              ⪁
dgeq              ⪂
dotmeet           ⩑
dotjoin           ⩒
dmeet             ⩑
djoin             ⩒
leqdot            ⩿
geqdot            ⪀
ltdot             ⋖
gtdot             ⋗
ltd               ⋖
gtd               ⋗
meetdot           ⟑
joindot           ⟇
mdot              ⟑  # [m]eet [dot]
jdot              ⟇  # [j]oin [dot]
ujoin             ⩅  # [u]nion
imeet             ⩄  # [i]nter
joinu             ⩅  # [u]nion
meeti             ⩄  # [i]nter
junion            ⩅  # [j]oin
minter            ⩄  # [m]eet
unionj            ⩅  # [j]oin
interm            ⩄  # [m]eet
smeet             ⊓  # [s]quare-like
sjoin             ⊔
Smeet             ⨅
Sjoin             ⨆
sglb              ⊓
slub              ⊔
Sglb              ⨅
Slub              ⨆
sleq              ⊑
sgeq              ⊒
slt               ⊏
sgt               ⊐
slneq             ⋤
sgneq             ⋥
snleq             ⋢
sngeq             ⋣
nsleq             ⋢
nsgeq             ⋣
trileq            ⊴  # [tri]angle-like
trigeq            ⊵
ntrileq           ⋬
ntrigeq           ⋭
trilt             ⊲
trigt             ⊳
ntrilt            ⋪
ntrigt            ⋫
dvmeet            ⩕  # [d]ouble [v]ision
dvjoin            ⩖
dvMeet            ⨇
dvJoin            ⨈
dvglb             ⩕
dvlub             ⩖
dvGlb             ⨇
dvLub             ⨈
bbmeet            ⩓  # [b]lackboard [b]old
bbjoin            ⩔
bblt              ⪡
bbgt              ⪢
mmeet             ⩓  # (no bb-)
jjoin             ⩔
llt               ⪡
ggt               ⪢

# %}}}

# relational algebra %{{{

loutj             ⟕  # [l]eft [out]er [j]oin
routj             ⟖
foutj             ⟗  # [f]ull [out]er [j]oin
antij             ▷  # [antij]oin
semij             ⋉  # [semij]oin
equij             ⋈₌ # [equij]oin
natuj             ⨝  # [natu]ral[j]oin

# %}}}

# games %{{{

tiny              ⧾
miny              ⧿

# %}}}

# common %{{{

topdown           ꜜ
bottomup          ꜛ
td                ꜜ
bu                ꜛ
rise              ꜛ
fall              ꜜ

# %}}}

# %}}}

# math (syn-named) %{{{

# punctuation, quotes, brackets, dots %{{{ 

## dots %{{{

vdots             ⋮  # [v]ertical
hdots             ⋯  # [h]orizontal
cdots             ⋯  # [c]enter
dotsb             ⋯  # (between) [b]inary operator
ldots             …  # [l]ower
dotsc             …  # [c]omma
nedots            ⋰  # [n]orth[e]ast
swdots            ⋰
sedots            ⋱
nwdots            ⋱
sdots             ⋰  # [s]lash
bdots             ⋱  # [b]ackslash

# %}}}

## brackets %{{{

lpar              (
rpar              )
lbrack            [
rbrack            [
lbrace            {
rbrace            }
lsquare           ⁅  # [square] with quill
rsquare           ⁆
langle            ⟨
rangle            ⟩
lang              ⟨
rang              ⟩
ldangle           ⦑  # [d]ot
rdangle           ⦒
ldang             ⦑
rdang             ⦒
lcangle           ⧼  # [c]urly/vy
rcangle           ⧽
lcang             ⧼
rcang             ⧽
Langle            ⟪
Rangle            ⟫
Lang              ⟪
Rang              ⟫
lAngle            ⦉
rAngle            ⦊
lAng              ⦉
rAng              ⦊
ltur              〔 # [l]eft [tur]tle
rtur              〕
lbtur             ⦗  # [b]lack/[b]old
rbtur             ⦘
lwtur             〘 # [w]hite
rwtur             〙
ltor              ⟬  # [l]eft [tor]toise
rtor              ⟭
Lpar              ⸨
Rpar              ⸩
lbutt             ⸨
rbutt             ⸩
lher              ⸨
rher              ⸩
lyan              ⸨
ryan              ⸩
lPar              ⦅
rPar              ⦆
lBra              ⟦
rBra              ⟧
lban              ⦇  # [ban]ana
rban              ⦈
llens             〖
rlens             〗
llen              〖
rlen              〗
lblens            【 # [b]lack
rblens            】
lblen             【
rblen             】
lfence            ⧘
rfence            ⧙
lfen              ⧘
rfen              ⧙
Rfence            ⧛
Lfence            ⧚
Rfen              ⧛
Lfen              ⧚
mfence            ⦚  # [m]id
mfen              ⦚
fence             ⦚
fen               ⦚
dfence            ⦙  # [d]otted
dfen              ⦙

# %}}}

## vbrackets ([o]ver, [u]nder, [v]oid (empty for [v]ertical) %{{{

oparen            ⏜
uparen            ⏝
vparen            ⁐
opar              ⏜
upar              ⏝
vpar              ⁐
obrace            ⏞
ubrace            ⏟
obrack            ⎴
ubrack            ⎵

# %}}}

# %}}}

# shapes %{{{

circle            ○  # (white)
Circle            ◯  # big
dcircle           ◌  # [d]otted
triangle          △  # see also: triangles
square            ◻
diamond           ◇
lozenge           ◊
paragram          ▱  # [para]llelo[gram]
rectangle         ▭
fpstar            ☆  # [f]ive-[p]ointed star
wstar             ☆  # [w]hite
bcircle           ●  # [b]lack
btriangle         ▲
bsquare           ◼
bdiamond          ◆
blozenge          ⧫
bparagram         ▰
brectangle        ▬
bstar             ★
bfpstar           ★
wlozenge          ◊
wparagram         ▱  # [para]llelo[gram]
wrectangle        ▭
bowtie            ⨝
hourglass         ⧖

# %}}}

# letterish %{{{

wp                ℘  # [W]eierstraß p
ell               ℓ
Ell               ℒ
horse             ʊ
Horse             Ʊ
hbar              ℏ
hslash            ℏ
cothree           ƹ
coThree           Ƹ
scythe            ʕ
ramshorn          ɤ

# %}}}

# borrowed symbols / shapes / punctuations %{{{

pilcrow           ¶
silcrow           §
pil               ¶
sil               §
spot              ⦁
scarab            ¤
pillow            ⌑

# %}}}

# self-explanatory %{{{

cwloop            ↻  # [c]lock[w]ise
ccwloop           ↺  # [c]ounter[c]lock[w]ise
floopl            ⟲  # [f]ull [loop] ccw [l]eft
floopr            ⟳  # cw [r]ight
loop              ↺
pool              ↻  # (loop backwards)
twixt             ≬
zap               ↯

# %}}}

# decorative / punctuative %{{{

tdot              ˙  # [t]op [dot]
bdot                ߲ # [b]ottom [dot] XXX: decorator abuse
bang              !
gnab              ¡  # (bang backwards)
bbang             ‼
ibang             ‽  # [i]nterro[bang]
ignab             ⸘
askbang           ⁈
bangask           ⁉
abang             ⁈
banga             ⁉
qbang             ⁈  # [q]uestion
bangq             ⁉

# %}}}

# individuals / ops / rels %{{{

cdot              ·  # [c]enter [dot]
dot               ·  # default: c
point             ·
bul               ∙
spark             ⟡
circ              ∘  # [circ]le op
Star              ★  # (large) star (nul op / individual)
star              ⋆  # [s]mall star (bin op)
astcol            ⁑  # [ast]erisk [col]on
ast               ∗  # [ast]erisk op
caret             ^  # [car]et op
dia               ⋄  # [dia]mond
bdia              ⬩  # [b]lack
loz               ⬫  # [loz]enge
bloz              ⬪  # [b]lack
sq                ▫  # [sq]uare
bsq               ▪  # [b]lack
rect              ▭  # [rect]angle
brect             ▬  # [b]lack
wminus            ▭  # [w]hite
bminus            ▬  # [b]lack
frown             ⌢
smile             ⌣
frosmi            ⁐  # [fro]wn [smi]le
flat              ♭
sharp             ♯
natu              ♮  # [natu]ral
magic             ⛤
comagic           ⛧
spades            ♠
hearts            ♡
diamonds          ♢
clubs             ♣
tictactoe         ⌗
titato            ⌗
tic               ⌗
crosshair         ⌖
crossh            ⌖
target            ⌖

# %}}}

# pipes and slashes %{{{

pipe              |
ppipe             ∥
pppipe            ⫴
Pppipe            ⫼
vert              |
vvert             ∥
vvvert            ⫴
Vvvert            ⫼
slash             ∕
sslash            ⫽
ssslash           ⫻
backslash         ∖
bslash            ∖  # [b]ack[slash]

# %}}}

# (o,sq,tr,dia,loz)-decorated %{{{

oplus             ⊕
ominus            ⊖
otimes            ⊗
ocross            ⊗
odivby            ⊘
oslash            ⊘
odot              ⊙
oast              ⊛
ostar             ⍟
oeq               ⊜
olt               ⧀
ort               ⧁
obot              ⦹
operp             ⦹
oparal            ⦷
onorm             ⦷
odiv              ⦶
obslash           ⦸
osminus           ⦸
obullet           ⦿
obul              ⦿
ocirc             ⦾
ocomp             ⦾
oof               ⦾
Odot              ⨀
Oplus             ⨁
Otimes            ⨂
sqplus            ⊞
sqminus           ⊟
sqtimes           ⊠
sqdot             ⊡
sqast             ⧆
sqdiv             ◫
sqcirc            ⧇
sqcomp            ⧇
sqof              ⧇
trplus            ⨹
trminus           ⨺
trtimes           ⨻
trdot             ◬
diadot            ⟐
lozminus          ⟠

# %}}}

# (based on) well-known op/rel symbols (except =) %{{{

cup               ∪
cap               ∩
Cup               ⋃
Cap               ⋂
uplus             ⊎  # [u]nion
Uplus             ⨄
uminus            ⩁
udot              ⨃
Udot              ⨃
ufrom             ⊌
uvee              ⩅
iwedge            ⩄  # [i]nter
idot              ⩀
wedge             ∧
vee               ∨
Wedge             ⋀
Vee               ⋁
wedgemid          ⩚
veemid            ⩛
dotwedge          ⩑
dotvee            ⩒
wedgedot          ⟑
veedot            ⟇
dvwedge           ⩕  # [d]ouble [v]ision
dvvee             ⩖
dvWedge           ⨇
dvVee             ⨈
bbwedge           ⩓  # [b]lackboard [b]old
bbvee             ⩔
vvee              ⩔
wwedge            ⩓
dotminus          ∸
dminus            ∸
minusdot          ⨪
commaminus        ⨩
cominus           ⨩  # [co]mma [minus]
apominus          ⨩  # [apo]strophe
dotplus           ∔
dplus             ∔
plusdot           ⨥
simplus           ⨤
plussim           ⨦
circplus          ⨢
cplus             ⨢
hatplus           ⨣
hplus             ⨣
dottimes          ⨰
dtimes            ⨰
simdot            ⸟
dotsim            ⩪
dsim              ⩪
circsim           ⸛
csim              ⸛
bbtri             ⟁  # [b]lackboard [b]old
ttri              ⟁  # (no bb-)

# %}}}

# eq-like %{{{

baldeq            ≘
triangleq         ≜
treq              ≜
deltaeq           ≜
Deq               ≜
wedgeq            ≙
veeq              ≚
asteq             ⩮
doteq             ≐
eqdot             ⩦
doteqdot          ≑
coleq             ≑  # [col]on
stareq            ≛
circeq            ≗
eqcirc            ≖
meq               ≞
pluseq            ⩲
eqplus            ⩱
dotinteq          ⩧
bump              ≏
bumps             ≎
bumpeq            ⪮
poemeq            ⌯

# %}}}

# directed symbols %{{{

## triangles %{{{

triu              △
trid              ▽
tril              ◁
trir              ▷
trirl             ⧎
striu             ▵  # [s]mall
strid             ▿
stril             ◃
strir             ▹
btriu             ▲  # [b]lack
btrid             ▼
btril             ◄
btrir             ►
sbtriu            ▴  # [s]mall [b]lack
sbtrid            ▾
sbtril            ◂
sbtrir            ▸

# %}}}

## arrows %{{{

arru              ↑
arrd              ↓
arrl              ←
arrr              →
arrnw             ↖  # [n]orth-[w]est
arrne             ↗
arrsw             ↙
arrse             ↘
arrb              ↔  # [b]idirectional
arrbh             ↔  # [h]orizontal
arrbv             ↕  # [v]ertical
arrbs             ⤢  # [s]lash
arrbb             ⤡  # [b]ackslash
arrb-             ↔
arrb|             ↕
arrb/             ⤢
arrb\             ⤡
sarru             ⤉  # [s]trike
sarrd             ⤈
sarrl             ⇷
sarrr             ⇸
sarrb             ⇹
narrl             ↚  # [n]egated
narrr             ↛
narrb             ↮
narru             ⤉  # XXX: abuse: strike for not
narrd             ⤈  # XXX: abuse: strike for not
arruu             ⇈
arrdd             ⇊
arrll             ⇇
arrrr             ⇉
arrud             ⇅
arrdu             ⇵
arrlr             ⇆
arrrl             ⇄
arrrrr            ⇶
arrlll            ⬱
arr2u             ⇈
arr2d             ⇊
arr2l             ⇇
arr2r             ⇉
arr3l             ⬱
arr3r             ⇶
squigl            ⇜
squigr            ⇝
squigb            ↭
Squigl            ⬳  # (long)
Squigr            ⟿
zigl              ⇜
zigr              ⇝
zigb              ↭
Zigl              ⬳  # (long)
Zigr              ⟿
loopl             ↫
loopr             ↬
fishl             ⬺
fishr             ⤕
dashu             ⇡
dashd             ⇣
dashl             ⇠
dashr             ⇢
harplu            ↼  # [harp]oons
harpld            ↽
harpru            ⇀
harprd            ⇁
harpul            ↿
harpur            ↾
harpdl            ⇃
harpdr            ⇂
Harpl             ⥢
Harpr             ⥤
aarru             ⇑
aarrd             ⇓
aarrl             ⇐
aarrr             ⇒
aarrnw            ⇖
aarrne            ⇗
aarrsw            ⇙
aarrse            ⇘
aarrb             ⇔
aarrbh            ⇔
aarrbv            ⇕
naarrl            ⇍  # [n]egated
naarrr            ⇏
naarrb            ⇎
saarrl            ⤂  # [s]trike
saarrr            ⤃
saarrb            ⤄
baarrl            ⤆  # [b]arred arrow
baarrr            ⤇
turnul            ↰  # [turn] [u]p [l]eft
turnur            ↱
turndl            ↲
turndr            ↳
turnld            ⬐
turnrd            ⬎
turnlu            ⬑
turnru            ⬏
halfu             ￪  # half-width arrows
halfd             ￬
halfl             ￩
halfr             ￫

## arrow (brutal) abbrevs %{{{
u                 ↑
d                 ↓
l                 ←
r                 →
n                 ↑  # [n]orth
s                 ↓
w                 ←
e                 →
nw                ↖
ne                ↗
sw                ↙
se                ↘
L                 ⟵
R                 ⟶
B                 ⟷  # (long)
uu                ⇈
dd                ⇊
ll                ⇇
rr                ⇉
ud                ⇅
du                ⇵
lr                ⇆
rl                ⇄
lll               ⬱
rrr               ⇶
2u                ⇈
2d                ⇊
2l                ⇇
2r                ⇉
3l                ⬱
3r                ⇶
# %}}}

# %}}}

## misc directed symbols %{{{

fishtl            ⥼  # [fisht]ail [r]ight
fishtr            ⥽
fishtu            ⥾
fishtd            ⥿
lollil            ⟜  # [lolli]pop [r]ight
lollir            ⊸
lollib            ⧟
lolliu            ⫯
lollid            ⫰
lolli             ⊸  # default: r
bwlolli           ⊷  # [b]lack [w]hite
wblolli           ⊶
sparkl            ⟣  # (spark is the arrow head)
sparkr            ⟢
turnsl            ⊣  # [turns]tile [r]ight
turnsr            ⊢
nturnsr           ⊬
turns             ⊢  # default: r
nturns            ⊬
tackl             ⊣
tackr             ⊢
tacku             ⊥
tackd             ⊤
Tackl             ⟞
Tackr             ⟝
Tacku             ⟘
Tackd             ⟙
tturnsr           ⊨
ntturnsr          ⊭
ttturnsr          ⫢
tturns            ⊨  # default: r
ntturns           ⊭
ttturns           ⫢
convl             ⚟  # lines [conv]erge
convr             ⚞
jaill             ⚟  # two cops one drunk, jail on the [r]
jailr             ⚞
sandl             ⚟  # [sand]wich
sandr             ⚞
blowl             ⊱
blowr             ⊰

# %}}}

# %}}}

# %}}}

# compat %{{{

## l- for [l]ogic symbols %{{{

land              ∧
lor               ∨
Land              ⋀
Lor               ⋁
limplies          →
limplied          ←
limps             →
limpd             ←
nlimplies         ↛
nlimlied          ↚
nlimps            ↛
nlimld            ↚
lnot              ¬
lforall           ∀
lexists           ∃
nlexists          ∄
lunique           ∃!
liff              ↔
vliff             ↕
nliff             ↮
longliff          ⟷
Liff              ⟷

# %}}}

## long- %{{{

longto            ⟶
longfrom          ⟵
longimplies       ⟹
longimplied       ⟸
longiff           ⟺

# %}}}

## t- for [t]ext-mode %{{{

tiff              ⟺
timplies          ⟹
timplied          ⟸
timps             ⟹
timpd             ⟸
timpr             ⟹
timpl             ⟸
timpb             ⟺

# %}}}

# %}}}

# superscripts and subscripts %{{{

^bul              ᣟ
^ast              *  # plain old [ast]erisk
^bang             ꜝ
^gnab             ꜞ
^down             ꜜ
^up               ꜛ
^triangle         ᐞ
^tri              ᐞ
^slash            ᐟ
^divby            ᐟ
^bslash           ᐠ
^sminus           ᐠ
^sdiff            ᐠ
^union            ᐡ
^inter            ᐢ
^hsubs            ᒼ
^hsups            ᐣ
^meet             ᣔ
^lt               ᑉ
^dot              ᐧ
^square           ⸋
^sq               ⸋
^box              ⸋
^top              ⸆
_caret            ‸
_bul               ٜ
_bang             ﹗
_ask              ﹖
_up               ￪
_down             ￬
_left             ￩
_right            ￫

# %}}}

# combining decorators %{{{
# WARN: experimental

# sem-named %{{{

@cantorc   ̿   # [cantor]'s [c]ardinality
@vec        ⃗  # [vec]tor
@cev        ⃖  # (vec backwards)
@rvec       ⃗  # [r]ight
@lvec       ⃖  # [l]eft

# %}}}

# syn-named %{{{

@oast       ⃰  # [o]ver
@oal        ⃖  # [a]rrow [l]eft
@oar        ⃗
@ohat      ̂
@ocirc     ̊
@obar      ̅
@obbar     ̿
@odot      ̇
@oddot     ̈
@ual        ⃮  # [u]nder [a]rrow [l]eft
@uar        ⃯
@ult        ͔
@ugt        ͕
@ubot      ̝
@utop      ̞
@uinfty     ͚
@ucirc     ̥
@ch        ̶   # [c]ancel [h]orizontally
@cd        ̷   # [d]iagonal
@cs        ̸   # [s]lash

# %}}}

# %}}}

